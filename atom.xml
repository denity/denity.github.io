<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>从小有个开个咖啡店悠闲无聊看店外匆匆忙忙人来人往一边打代码一边喝咖啡吃蛋糕的梦想</title>
  
  <subtitle>Keep It Simple Stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sqj.me/"/>
  <updated>2019-10-29T07:58:18.580Z</updated>
  <id>http://sqj.me/</id>
  
  <author>
    <name>Jay Yi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard/Url</title>
    <link href="http://sqj.me/2019/a-way-to-set-grafana-panel-links/"/>
    <id>http://sqj.me/2019/a-way-to-set-grafana-panel-links/</id>
    <published>2019-10-28T15:03:28.000Z</published>
    <updated>2019-10-29T07:58:18.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard"><a href="#配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard" class="headerlink" title="配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard"></a>配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard</h3><p>Grafana有3个地方可以配置跳转链接</p><ol><li>dashboard层次，在dashboard的settings可以配置Links。</li><li>每一个Panel的<strong>data links</strong>。</li><li>每一个Panel的<strong>panel links</strong>。</li></ol><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/awaytosetlinks1.png" alt="在dashboard的Settings-&gt;Links中配置链接"></p><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/awaytosetlinks2.png" alt="在Panel中配置data links"></p><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/awaytosetlinks3.png" alt="在Panel中配置panel links"></p><p>在这三个地方都能够实现点击链接跳转到另外的页面。</p><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>在添加链接时，可以使用绝对地址，也可以通过传递变量参数，实现链接的动态跳转</p><p>主要参数如下</p><table><thead><tr><th>名称</th><th>举例</th><th>简要说明</th></tr></thead><tbody><tr><td>${配置的dashboard变量}</td><td>如$group,$host等</td><td>这些变量需要在dashboard的settings的变量里面设置</td></tr><tr><td>${__url_time_range}</td><td>时间范围</td><td>${<strong>url_time_range} ${</strong>from} ${__to}</td></tr><tr><td>${__series.name}</td><td>数据列的名称</td><td>只在<strong>data links</strong>中有</td></tr><tr><td>${__field.name}</td><td>数据列的名称</td><td>只在<strong>data links</strong>中有</td></tr><tr><td>${__value.numeric}</td><td>图表的数值</td><td>只在<strong>data links</strong>中有，可以是字符/数字/原值/计算值</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p><strong>注意：</strong>在实践中发现，如果dashboard的变量，允许使用<strong>ALL</strong>的时候，只有在<strong>panel links</strong>中配置的url能够准确抓取当前图表的变量值。否则，会将变量的所有值，都会被传送到跳转链接中，导致目标url在获取参数的时候不正确。</p><h3 id="跳转到Dashboard"><a href="#跳转到Dashboard" class="headerlink" title="跳转到Dashboard"></a>跳转到Dashboard</h3><p>跳转到Dashboard是，网上的说明一直说的不够透彻。最简单的方法如下：</p><p>1、进入需要跳转的Dashboard，复制浏览器前面一段<br><img src="https://s1.yuehetong.com/denitygithub_media/2019/awaytosetlinks4.png" alt="复制dashboard链接地址"></p><p>2、这段地址前面一段，就是Dashboard的地址，将这段链接地址，复制到Links里面，配置即可。</p><p>3、加上适当的参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard&quot;&gt;&lt;a href=&quot;#配置Grafana的Panel地址，实现点击图表后跳转到另一个dashboard&quot; class=&quot;headerlink&quot; title=&quot;配置Grafana的Pa
      
    
    </summary>
    
    
      <category term="HTML/CSS/JS" scheme="http://sqj.me/categories/HTML-CSS-JS/"/>
    
      <category term="运维" scheme="http://sqj.me/categories/HTML-CSS-JS/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Grafana" scheme="http://sqj.me/tags/Grafana/"/>
    
  </entry>
  
  <entry>
    <title>设置github正确的Repository name避免404错误</title>
    <link href="http://sqj.me/2019/set-correct-name-to-fix-github-404/"/>
    <id>http://sqj.me/2019/set-correct-name-to-fix-github-404/</id>
    <published>2019-10-24T08:50:00.000Z</published>
    <updated>2019-10-25T05:04:30.519Z</updated>
    
    <content type="html"><![CDATA[<p>现在一个很热门的博客方式，就是在github上建Github Pages。</p><p>在创建Github的仓库（Resposity），并且上传Hexo页面后，页面总是404。</p><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/1571907461817.png" alt="1571907461817"></p><p>在网上很多教程中，都忽略了一点，就是正确设置github仓库的名字。</p><p><strong>如果要设置Github Pages，仓库的名字，必须是用户名。才能出现形如 <u>username.github.io</u> 的访问方式。</strong></p><p>也就是说，这里的仓库名称也不能随便取得。</p><hr><p>正确设置后，在Github的“Settings”里面，将直接显示出可访问的地址。</p><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/1571907855052.png" alt="1571907855052"></p><p>配置完毕后，形成如下的设置，注意仓库前缀需要和用户名一致。</p><p><img src="https://s1.yuehetong.com/denitygithub_media/2019/githubname-settings.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;现在一个很热门的博客方式，就是在github上建Github Pages。&lt;/p&gt;
&lt;p&gt;在创建Github的仓库（Resposity），并且上传Hexo页面后，页面总是404。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s1.yuehetong.com/denit
      
    
    </summary>
    
    
      <category term="HTML/CSS/JS" scheme="http://sqj.me/categories/HTML-CSS-JS/"/>
    
      <category term="运维" scheme="http://sqj.me/categories/HTML-CSS-JS/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Hexo" scheme="http://sqj.me/tags/Hexo/"/>
    
  </entry>
  
</feed>
